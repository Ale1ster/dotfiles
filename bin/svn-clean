#!/usr/bin/env python

from xml.parsers.expat import ParserCreate
from subprocess import Popen,PIPE,STDOUT
from shutil import rmtree
from os import remove, path
import sys
import argparse

class SubversionCleaner(object):
    def __init__(self, dry_run=False):
        self.currentPath = ""
        self.dry_run = dry_run

    def StartTag(self, name, attrs):
        if name == 'entry':
            self.current_path = attrs['path']
        elif name == 'wc-status':
            if attrs['item'] == 'ignored' or attrs['item'] == 'unversioned':

                print ('would remove: ' if self.dry_run else 'removing: ') + self.current_path

                if not self.dry_run:
                    if path.isfile(self.current_path) or path.islink(self.current_path):
                        remove(self.current_path)
                    elif path.isdir(self.current_path):
                        rmtree(self.current_path)

    def Clean(self):
        pstatus = Popen('svn status --no-ignore --xml', shell=True, stdout=PIPE, stderr=STDOUT)

        xmlparser = ParserCreate()
        xmlparser.StartElementHandler = self.StartTag
        xmlparser.ParseFile(pstatus.stdout)

        retval = pstatus.wait()


parser = argparse.ArgumentParser()
parser.add_argument('-n', '--dryrun',
        help="don't remove anything, just show what would have been removed",
        action='store_true')
args = parser.parse_args()

sp = SubversionCleaner(dry_run=args.dryrun)
sp.Clean()
